# .dotfiles/bash/01-shopt
#
# Many of these are set via profile and rc files in /etc.  To see what's on/off -> 'shopt'
#
# Check in a script -> shopt -q optnam; echo $?
# 0 = true.  option is set
# 1 = false. option is not set
#
# If set, a cd command's argument that is not a directory is assumed to be the variable's name whose value is the directory to change to
#shopt -s cdable_vars

# If set, minor errors in the spelling of a directory component in a cd command are corrected. If a correction is found, the corrected file name is printed, and the command proceeds
#shopt -s cdspell

# If set, bash checks that a command found in the hash table of remembered commands actually exists before trying to execute it. If a hashed command no longer exists, a normal path search is performed.
#shopt -s checkhash

# If set, bash lists the status of any stopped and running jobs before exiting an interactive shell. The shell always postpones exiting if any jobs are stopped. For more information about jobs
#shopt -s checkjobs

# If set, bash checks the window size of the current terminal window after each command, and, if necessary, updates the values of the LINES and COLUMNS shell variables
#shopt -s checkwinsize

# If set, bash attempts to save all lines of a multiple-line command in the same history entry
#shopt -s cmdhist

# If set, bash changes its behavior to that of bash version 3.1. Other options compat32, compat40, compat41
#shopt -s compat31

# If set, bash replaces directory names with the results of word expansion when performing file name completion.
#shopt -s direxpand

# If set, bash attempts spelling correction on directory names during word completion if the directory name initially supplied does not exist.
#shopt -s dirspell

# If set, bash includes file names beginning with a '.' in the results of path name globbing
#shopt -s dotglob

# If set, a non-interactive shell does not exit if it cannot execute the file specified as an argument to the exec builtin command. An interactive shell does not exit if exec fails
#shopt -s execfail

# If set, aliases are expanded as described in bash aliases. This option is enabled by default for interactive shells
#shopt -s expand_aliases

# Affects degugging behaviour
#shopt -s extdebug

# If set, the extended pattern matching features offered by bash path name expansion are enabled
#shopt -s extglob

# If set, $'string' and $"string" quoting is performed within ${parameter} expansions enclosed in double quotes. This option is enabled by default.
#shopt -s extquote

# If set, patterns which fail to match file names during path name expansion result in an expansion error.
#shopt -s failglob

# If set, the suffixes specified by the FIGNORE shell variable cause words to be ignored when performing word completion even if the ignored words are the only possible completions
#shopt -s force_fignore

# If set, the pattern ** used in a path name expansion context matches all files and zero or more directories and subdirectories. If the pattern is followed by a /, only directories and subdirectories match.
#shopt -s globstar

# If set, shell error messages are written in the standard GNU error message format
#shopt -s gnu_errfmt

# If set, the history list is appended to the file named by the HISTFILE variable's value when the shell exits, rather than overwriting the file
#shopt -s histappend

# If set, and readline is used, a user is given the opportunity to re-edit a failed history substitution
#shopt -s histreedit

# If set, and readline is used, the results of history substitution are not immediately passed to the shell parser. Instead, the resulting line is loaded into the readline editing buffer, allowing further modification
#shopt -s histverify

# If set, and readline is used, bash attempts to perform hostname completion when a word containing a @ is completed. Default on
#shopt -s hostcomplete

# If set, bash sends the SIGHUP signal to all jobs when an interactive login shell exits.
#shopt -s huponexit

# If set, allow a word beginning with # to cause that word and all remaining characters on that line to be ignored in an interactive shell. Default on
#shopt -s interactive_comments

# If set, and job control is not active, the shell runs the last command of a pipeline not executed in the background in the current shell environment.
#shopt -s lastpipe

# If set, and the cmdhist option is enabled, multi-line commands are saved to the history with embedded newlines rather than using semicolon separators where possible.
#shopt -s lithist

#
#shopt -s login_shell

# If set, and a file that bash is checking for mail was accessed after last checked, the message "The mail in mailfile has been read" is displayed.
#shopt -s mailwarn

# If set, and readline is used, bash does not attempt to search the PATH for possible completions when completion is attempted on an empty line.
#shopt -s no_empty_cmd_completion

# If set, bash matches file names in a case-insensitive fashion when performing path name expansion.
#shopt -s nocaseglob

# If set, bash matches patterns in a case-insensitive fashion when performing matching while executing case or [[ conditional commands.
#shopt -s nocasematch

# If set, bash allows patterns which match no files to expand to a null string, rather than themselves.
#shopt -s nullglob

# If set, the programmable completion facilities are enabled. For more information, see programmable completion in bash.  Default on
#shopt -s progcomp

# If set, prompt strings undergo parameter expansion, command substitution, arithmetic expansion, and quote removal after being expanded. For more information, see bash prompting. Default on
#shopt -s promptvars

# If set, shell becomes restrited and can not be undone within the shell
#shopt -s restricted_shell

# If set, the shift builtin prints an error message when the shift count exceeds the number of positional parameters.
#shopt -s shift_verbose

# If set, the source builtin uses the value of the shell variable PATH to find the directory containing the file supplied as an argument. Default on
#shopt -s sourcepath

# ?  Not enabled on my mac
#shopt -s xpg_echo
